// Generated by CoffeeScript 1.6.3
(function() {
  var process_chart_change, set_visibility, update_bldg_list, update_chart_sensor_lists, update_results;

  window.AN = {};

  update_results = function() {
    return null;
  };

  set_visibility = function(ctrl_list, show) {
    var ctrl, _i, _j, _len, _len1, _results, _results1;
    if (show) {
      _results = [];
      for (_i = 0, _len = ctrl_list.length; _i < _len; _i++) {
        ctrl = ctrl_list[_i];
        _results.push($("#" + ctrl).show());
      }
      return _results;
    } else {
      _results1 = [];
      for (_j = 0, _len1 = ctrl_list.length; _j < _len1; _j++) {
        ctrl = ctrl_list[_j];
        _results1.push($("#" + ctrl).hide());
      }
      return _results1;
    }
  };

  process_chart_change = function() {
    var ctrls, is_multiple, sensor_ctrl;
    ctrls = ['refresh', 'ctrl_sensor', 'ctrl_avg', 'ctrl_avg_export', 'ctrl_normalize', 'xy_controls', 'time_period', 'download_many'];
    set_visibility(ctrls, false);
    if ($("#select_bldg").val() === "multi") {
      set_visibility(['refresh', 'time_period'], true);
      update_results();
      return;
    }
    is_multiple = false;
    switch ($("#select_chart").val()) {
      case "0":
      case "1":
        set_visibility(['refresh'], true);
        break;
      case "2":
        set_visibility(['refresh', 'ctrl_sensor', 'ctrl_avg', 'time_period'], true);
        is_multiple = true;
        break;
      case "3":
        set_visibility(['refresh', 'ctrl_sensor', 'ctrl_normalize', 'time_period'], true);
        break;
      case "4":
        set_visibility(['refresh', 'ctrl_sensor', 'time_period'], true);
        break;
      case "5":
        set_visibility(['refresh', 'xy_controls', 'time_period'], true);
        break;
      case "6":
        set_visibility(['refresh', 'ctrl_sensor', 'ctrl_avg_export', 'time_period', 'download_many'], true);
        is_multiple = true;
    }
    sensor_ctrl = $("#select_sensor");
    if (is_multiple) {
      if (sensor_ctrl.attr("multiple") !== "multiple") {
        sensor_ctrl.attr("multiple", "multiple");
        sensor_ctrl.multiselect({
          minWidth: 300,
          selectedList: 3
        });
      }
    } else {
      if (sensor_ctrl.attr("multiple") === "multiple") {
        sensor_ctrl.multiselect("destroy");
        sensor_ctrl.removeAttr("multiple");
      }
    }
    return update_results();
  };

  update_chart_sensor_lists = function() {
    var url;
    url = "" + ($("#BaseURL").text()) + "chart_sensor_list/" + ($("#select_group").val()) + "/" + ($("#select_bldg").val()) + "/";
    return $.getJSON(url, function(data) {
      $("#select_chart").html(data.charts);
      $("#select_sensor").html(data.sensors);
      $("#select_sensor_x").html(data.sensors);
      $("#select_sensor_y").html(data.sensors);
      return process_chart_change();
    });
  };

  update_bldg_list = function() {
    return $("#select_bldg").load("" + ($("#BaseURL").text()) + "bldg_list/" + ($("#select_group").val()) + "/", function() {
      return $("#select_bldg").trigger("change");
    });
  };

  $(function() {
    var d;
    $("#time_period").buttonset();
    $("#start_date").datepicker({
      dateFormat: "mm/dd/yy"
    });
    d = new Date();
    $("#start_date").val((d.getMonth() + 1) + "/" + d.getDate() + "/" + d.getFullYear());
    $("#end_date").datepicker({
      dateFormat: "mm/dd/yy"
    });
    $("#custom_dates").hide(0);
    $("#time_period").change(function() {
      if ($("input:radio[name=time_period]:checked").val() !== "custom") {
        return $("#custom_dates").hide();
      } else {
        return $("#custom_dates").show();
      }
    });
    $("#refresh").button();
    $("#normalize").button();
    $("#divide_date").datepicker({
      dateFormat: "mm/dd/yy"
    });
    $("#download_many").button();
    $("#select_group").change(update_bldg_list);
    $("#select_bldg").change(update_chart_sensor_lists);
    $("#select_chart").change(process_chart_change);
    return process_chart_change();
  });

}).call(this);
